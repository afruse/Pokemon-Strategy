#BlueJ class context
comment0.target=BattleWorld
comment0.text=\r\n\ This\ method\ represends\ the\ grid\ screen\ of\ when\ the\ pokemon\ are\ in\ battle\r\n\ \r\n\ @author\ (Daniel)\ \r\n\ @version\ 1.0\r\n
comment1.params=gw\ enemyTeam
comment1.target=BattleWorld(GymWorld,\ MoveablePokemon[])
comment1.text=\r\n\ A\ constructor\ for\ BattleWorld\r\n\ @param\ gw\ \ \ \ Stores\ the\ world\ the\ trainer\ was\ in\ before\ entering\ battle\r\n\ @param\ enemyTeam\ \ \ \ \ An\ array\ which\ represents\ the\ enemy\ team\r\n\ \r\n
comment10.params=
comment10.target=int\ getTileHeight()
comment10.text=\r\n\ Returns\ the\ tileHeight\ of\ the\ 2d\ grid\r\n\ @return\ int\ \ Returns\ the\ tile\ height\r\n\ \r\n
comment11.params=
comment11.target=int\ getTileLength()
comment11.text=\r\n\ Returns\ tile\ length\ of\ the\ 2d\ grid\r\n\ return\ int\ Returns\ tile\ length\r\n
comment12.params=
comment12.target=MoveablePokemon\ getCurChar()
comment12.text=\r\n\ Gets\ the\ current\ pokemon\ thats\ taking\ action\r\n\ @return\ MoveablePokemon\ \ \ \ \ \ Returns\ the\ pokemon\ at\ the\ front\ of\ the\ queue\r\n
comment13.params=
comment13.target=java.util.ArrayList\ getMap()
comment13.text=\r\n\ Gets\ the\ 2d\ array\ of\ the\ battle\ world\r\n\ @return\ ArrayList<ArrayList<Coordinate>>\ \ \ \ \ Returns\ the\ 2d\ arraylist\ of\ coordinates\ which\ rep\ grid\ tiles\r\n
comment14.params=a\ mapIndexX\ mapIndexY
comment14.target=boolean\ moveCharacter(MoveablePokemon,\ int,\ int)
comment14.text=\r\n\ Moves\ the\ pokemon\ on\ teh\ 2d\ grid\r\n\ @param\ a\ \ \ \ \ Represents\ the\ pokemon\ thats\ being\ moved\r\n\ @param\ mapIndexX\ \ \ \ \ An\ int\ represents\ the\ xIndex\ of\ the\ 2d\ arraylist\ grid\r\n\ @param\ mapIndexY\ \ \ \ \ An\ int\ that\ represents\ the\ yIndex\ of\ the\ 2d\ arraylist\ grid\r\n\ @return\ boolean\ \ \ \ \ \ Returns\ true\ if\ character\ was\ able\ to\ move\ an\ false\ otherwise\r\n
comment15.params=coord
comment15.target=boolean\ checkObstruction(Coordinate)
comment15.text=\r\n\ A\ method\ that\ checks\ if\ there\ is\ an\ obsuruction\ in\ the\ player/enemy's\ wanted\ direction\ to\ avoid\ actors\ on\ the\ same\ tile\r\n\ @param\ coord\ \ \ \ \ Represents\ the\ coordinate\ that\ needs\ to\ be\ checked\ in\ the\ 2d\ arrayList\r\n\ @return\ boolean\ \ \ Returns\ true\ if\ there\ is\ no\ obstruction\ and\ false\ otherwise\r\n
comment16.params=
comment16.target=void\ endCharTurn()
comment16.text=\r\n\ A\ method\ that\ ends\ the\ current\ character's\ turn\r\n
comment17.params=
comment17.target=void\ switchToGymWorld()
comment17.text=\r\n\ A\ method\ that\ switches\ the\ world\ back\ to\ the\ player's\ world\ where\ they\ challenged\ the\ enemy\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Acts\ and\ check\ if\ the\ player\ has\ clicked\ on\ the\ world\ to\ reset\ enemy\ selected\r\n
comment3.params=
comment3.target=int\ getMovement()
comment3.text=\r\n\ A\ getter\ method\ that\ calls\ the\ decider\ object\ created\ to\ get\ the\ number\ of\ tiles\ the\ pokemon\ can\ move\r\n
comment4.params=
comment4.target=void\ started()
comment4.text=\r\n\ starts\ music\ when\ world\ started\r\n
comment5.params=
comment5.target=void\ stopped()
comment5.text=\r\n\ stops\ music\ when\ world\ or\ code\ stopped\r\n
comment6.params=p
comment6.target=void\ setCurAttacker(MoveablePokemon)
comment6.text=\r\n\ Sets\ the\ current\ attacker\ of\ the\ current\ pokemon\r\n\ @param\ p\ \ \ \ \ The\ pokemon\ that's\ going\ to\ attack\r\n
comment7.params=p
comment7.target=void\ setCurVictim(MoveablePokemon)
comment7.text=\r\n\ Sets\ the\ victim\ of\ the\ current\ attacker\r\n\ @param\ p\ \ \ \ \ The\ pokemon\ thats\ going\ to\ be\ set\ as\ the\ target\r\n
comment8.params=p
comment8.target=void\ removeFromQueue(MoveablePokemon)
comment9.params=
comment9.target=java.util.Queue\ getBattleOrder()
comment9.text=\r\n\ Gets\ the\ current\ queue\ of\ the\ pokemon\ that\ goes\ next\r\n\ @return\ Queue<MoveablePokemon>\ \ \ Returns\ the\ battle\ order\ of\ the\ pokemon\ in\ battle\r\n\ \r\n
numComments=18
