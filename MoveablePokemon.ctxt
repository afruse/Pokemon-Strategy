#BlueJ class context
comment0.target=MoveablePokemon
comment0.text=\r\n\ This\ is\ the\ superclass\ which\ all\ of\ the\ pokemon\ classes\ inherate\ from\ which\ is\ used\ in\ the\ grid\ battle\ part\ of\ the\ game\r\n\ \r\n\ @author\ (Daniel\ Tan)\ \r\n\ @version\ 1.0\r\n
comment1.params=mapIndexX\ mapIndexY\ isPlayer\ lvl\ curXp\ xpNeeded
comment1.target=MoveablePokemon(int,\ int,\ boolean,\ int,\ int,\ int)
comment1.text=\r\n\ The\ constructer\ where\ it\ creates\ the\ pokemon\ and\ sets\ where\ it\ spawns\ in\ the\ grid\r\n\ @param\ mapIndexX\ \ \ \ \ Represents\ the\ x\ Index\ of\ the\ 2dArray\ of\ the\ grid\r\n\ @param\ mapIndexY\ \ \ \ \ Represents\ the\ y\ Index\ of\ the\ 2dArray\ of\ the\ grid\r\n\ @param\ isPlayer\ \ \ \ \ \ Represents\ if\ object\ is\ a\ player\ or\ an\ enemy(true\ is\ player\ and\ false\ is\ enemy)\r\n\ @param\ lvl\ \ \ \ \ \ \ \ \ \ \ Represents\ the\ lvl\ of\ the\ pokemon\r\n\ @param\ curXp\ \ \ \ \ \ \ \ \ Represents\ the\ current\ amount\ of\ xp\ the\ pokemon\ has\r\n\ @param\ xpNeeded\ \ \ \ \ \ Represents\ the\ xp\ needed\ for\ the\ pokemon\ to\ level\ up\r\n
comment10.params=
comment10.target=void\ healToFull()
comment10.text=\r\n\ A\ method\ which\ sets\ the\ pokemon's\ health\ to\ full\ when\ called\r\n
comment11.params=
comment11.target=void\ doSomething()
comment11.text=\r\n\ The\ method\ which\ decides\ what\ each\ player\ and\ pokemon\ can\ do\r\n
comment12.params=option
comment12.target=boolean\ checkKeyPress(java.lang.String)
comment12.text=\r\n\ A\ method\ that\ moves\ the\ pokemon\ on\ the\ grid\ based\ on\ the\ key/String\ entered\r\n\ @param\ option\ \ \ \ \ \ \ \ A\ string\ which\ represents\ the\ choice\ to\ move\ mainly\ used\ for\ enemy\ and\ empty\ string\ means\ its\ for\ player\ and\ ignores\r\n\ @return\ boolean\ \ \ \ \ \ Returns\ true\ if\ the\ pokemon\ has\ sucessfuly\ moved\ and\ false\ if\ it\ couldn't\ due\ to\ obstructions/restrictions\r\n
comment13.params=
comment13.target=void\ setAttackOutline()
comment13.text=\r\n\ \ A\ method\ which\ spawns\ the\ pokemon's\ attack\ range\ based\ on\ the\ type\ of\ attack\ it\ has\ selected\r\n\ \r\n\ Diagram\:\r\n\ \r\n\ \ \ \ x\r\n\ \ x\ x\ x\r\nx\ x\ 0\ x\ x\r\n\ \ x\ x\ x\r\n\ \ \ \ x\r\n\ \r\n\ \ x\ \r\nx\ 0\ x\r\n\ \ x\r\n\ \r\n
comment14.params=
comment14.target=int\ getMovement()
comment14.text=\r\n\ A\ method\ that\ returns\ the\ amount\ of\ tiles\ the\ current\ pokemon's\ turn\r\n\ @return\ int\ \ \ \ \ \ Returns\ the\ number\ of\ tiles\ it\ can\ move\r\n
comment15.params=
comment15.target=void\ removeAllSelectTiles()
comment15.text=\r\n\ A\ method\ that\ removes\ any\ of\ the\ SelectTile\ class\ objects\ from\ the\ world\ which\ is\ used\ for\ displaying\ attack\ ranged\r\n
comment16.params=
comment16.target=boolean\ enemyCheckVictim()
comment16.text=\r\n\ A\ method\ used\ for\ enemy\ pokemon\ to\ check\ if\ it\ is\ possible\ to\ attack\ the\ pokemon\ with\ it's\ given\ range\ and\ targets\ andy\ possible\ victims\r\n\ @return\ boolean\ \ \ \ \ \ Returns\ true\ if\ it\ can\ attack\ a\ player\ pokemon\ and\ false\ otherwise\r\n
comment17.params=
comment17.target=java.lang.String\ getEnemyAttack()
comment17.text=\r\n\ A\ method\ which\ gets\ the\ type\ of\ attack\ the\ enemy\ will\ use\ based\ off\ which\ pokemon\ are\ in\ it's\ attack\ range\r\n\ @return\ String\ \ \ \ \ \ \ A\ String\ which\ represents\ the\ type\ of\ attack(v,c);\r\n
comment18.params=
comment18.target=boolean\ checkExit()
comment18.text=\r\n\ A\ method\ which\ checks\ if\ the\ player\ wants\ to\ end\ their\ turn\r\n\ @return\ boolean\ \ \ \ \ \ Returns\ false\ if\ not\ clicked\r\n
comment19.params=
comment19.target=void\ setExit()
comment19.text=\r\n\ A\ method\ which\ sets\ the\ caller's\ turn\ to\ end\r\n
comment2.params=xpNeeded
comment2.target=void\ setMaxXp(int)
comment20.params=
comment20.target=java.lang.String\ checkAttack()
comment20.text=\r\n\ A\ method\ which\ gets\ the\ key\ the\ player\ clicks\ on\ and\ returns\ the\ type\ of\ attack\ based\ on\ that\ key\r\n\ @return\ String\ \ \ \ \ \ \ Returns\ the\ type\ of\ attack\ in\ a\ string(c,\ or,\ v)\r\n
comment21.params=attacker\ victim\ scenario\ attack\ movePower
comment21.target=void\ attackAnimationSwitch(MoveablePokemon,\ MoveablePokemon,\ int,\ java.lang.String,\ int)
comment21.text=\r\n\ A\ method\ that\ switches\ world\ to\ a\ cutscene\ where\ the\ pokemon\ attacks\ the\ victim\ of\ it's\ choice\r\n\ @param\ attacker\ \ \ \ \ \ Rep\ the\ pokemon\ that\ is\ doing\ the\ attacking\r\n\ @param\ victim\ \ \ \ \ \ \ \ Rep\ the\ pokemon\ that\ is\ being\ attacked\r\n\ @param\ scenario\ \ \ \ \ \ An\ int\ that\ decides\ on\ the\ type\ of\ scenario(player\ being\ attacked,\ enemy\ being\ attacked)\r\n\ @param\ attack\ \ \ \ \ \ \ \ A\ String\ which\ represents\ the\ type\ of\ attack\ the\ caller\ is\ using\r\n\ @param\ movePower\ \ \ \ \ An\ int\ that\ represents\ the\ strength\ of\ the\ move\r\n
comment22.params=victimDef\ movePower
comment22.target=void\ doDamage(int,\ int)
comment22.text=\r\n\ A\ method\ which\ the\ attacker\ uses\ to\ deal\ damage\ to\ it's\ target\r\n\ @param\ victimDef\ \ \ \ \ An\ int\ which\ rep\ the\ defence\ of\ the\ victim\r\n\ @param\ movePower\ \ \ \ \ An\ int\ which\ rep\ the\ strength\ of\ the\ attack\r\n
comment23.params=
comment23.target=boolean\ getIsTurnEnd()
comment23.text=\r\n\ A\ method\ which\ returns\ if\ the\ current\ pokemon's\ turn\ is\ over\ or\ not\r\n\ @return\ boolean\ \ \ \ \ \ \ Returns\ true\ if\ turn\ did\ end\ and\ false\ if\ not\r\n
comment24.params=
comment24.target=boolean\ getDidMove()
comment24.text=\r\n\ A\ method\ which\ returns\ if\ the\ pokemon\ has\ done\ a\ "move"\ yet\r\n\ @return\ boolean\ \ \ \ \ \ Returns\ true\ if\ they\ did\ and\ false\ if\ not\r\n
comment25.params=
comment25.target=int\ getMapIndexX()
comment25.text=\r\n\ A\ method\ that\ returns\ the\ x\ Index\ of\ the\ pokemon\ in\ the\ 2dArray\ of\ the\ grid\r\n\ @return\ int\ \ \ \ \ \ Returns\ the\ x\ Index\ of\ the\ 2dArray\ \r\n
comment26.params=
comment26.target=int\ getMapIndexY()
comment26.text=\r\n\ A\ method\ that\ returns\ the\ y\ Index\ of\ the\ pokemon\ in\ the\ 2dArray\ of\ the\ grid\r\n\ @return\ int\ \ \ \ \ \ Returns\ the\ y\ Index\ of\ the\ 2dArray\ \r\n
comment27.params=x
comment27.target=void\ setMapIndexX(int)
comment27.text=\r\n\ A\ method\ that\ sets\ the\ xIndex\ of\ the\ pokemon\ in\ the\ 2dArray\r\n\ @param\ x\ \ \ \ \ \ \ \ The\ index\ they\ want\ to\ set\ it\ to\r\n
comment28.params=y
comment28.target=void\ setMapIndexY(int)
comment28.text=\r\n\ A\ method\ that\ sets\ the\ yIndex\ of\ the\ pokemon\ in\ the\ 2dArray\r\n\ @param\ y\ \ \ \ \ \ \ \ The\ index\ they\ want\ to\ set\ it\ to\r\n
comment29.params=
comment29.target=boolean\ getIsPlayer()
comment29.text=\r\n\ A\ method\ that\ returns\ if\ the\ caller\ is\ a\ player\ or\ an\ enemy\r\n\ @return\ boolean\ \ \ \ \ \ Returns\ true\ if\ it's\ a\ player\ and\ false\ if\ enemy\r\n
comment3.params=xp
comment3.target=void\ setXp(int)
comment30.params=
comment30.target=void\ flipTurn()
comment30.text=\r\n\ A\ method\ that\ switches\ the\ boolean\ switches\ of\ didMove\ and\ isTurn\ when\ called\r\n
comment31.params=
comment31.target=boolean\ getIsTurn()
comment31.text=\r\n\ A\ method\ that\ returns\ if\ it\ is\ the\ caller's\ turn\ or\ not\r\n\ @return\ boolean\ \ \ \ \ \ Returns\ true\ if\ is\ turn\ and\ false\ otherwise\r\n
comment32.params=p\ mouseX
comment32.target=int\ getMouseDistanceX(MoveablePokemon,\ int)
comment32.text=\r\n\ A\ method\ that\ returns\ the\ x\ distance\ between\ the\ mouse\ and\ the\ passed\ in\ pokemon\r\n\ @param\ p\ \ \ \ \ \ \ \ \ Rep\ the\ pokemon\ you\ want\ to\ compare\ the\ mouse\ to\r\n\ @param\ mouseX\ \ \ \ Rep\ the\ x\ value\ of\ the\ mouse\r\n\ @return\ int\ \ \ \ \ \ Returns\ the\ x\ distance\ between\ the\ mouse\ and\ pokemon\r\n
comment33.params=p\ mouseY
comment33.target=int\ getMouseDistanceY(MoveablePokemon,\ int)
comment33.text=\r\n\ A\ method\ that\ returns\ the\ y\ distance\ between\ the\ mouse\ and\ the\ passed\ in\ pokemon\r\n\ @param\ p\ \ \ \ \ \ \ \ \ Rep\ the\ pokemon\ you\ want\ to\ compare\ the\ mouse\ to\r\n\ @param\ mousey\ \ \ \ Rep\ the\ y\ value\ of\ the\ mouse\r\n\ @return\ int\ \ \ \ \ \ Returns\ the\ y\ distance\ between\ the\ mouse\ and\ pokemon\r\n
comment34.params=p
comment34.target=void\ enemyHit(MoveablePokemon)
comment34.text=\r\n\ Sets\ the\ target\ of\ the\ caller\ to\ the\ passed\ in\ pokemon\r\n\ @param\ p\ \ \ \ \ Rep\ the\ pokemon\ being\ targetted\r\n
comment35.params=
comment35.target=void\ readyToAttack()
comment35.text=\r\n\ A\ method\ which\ allows\ the\ caller\ to\ attack\ and\ switch\ to\ cutscene\ world\r\n
comment36.params=
comment36.target=MoveablePokemon\ getVictim()
comment36.text=\r\n\ A\ method\ that\ returns\ the\ caller's\ set\ victim\r\n\ @return\ MoveablePokemon\ \ \ \ \ \ Returns\ what\ the\ caller's\ victim\ is\ set\ to\r\n
comment37.params=
comment37.target=void\ enemyUnHit()
comment37.text=\r\n\ A\ method\ which\ resets\ the\ caller's\ target\r\n
comment38.params=
comment38.target=boolean\ getIsEnemySet()
comment38.text=\r\n\ A\ method\ that\ returns\ if\ the\ target\ of\ the\ caller\ is\ set\r\n\ @return\ boolean\ \ \ \ \ Returns\ true\ if\ target\ is\ set\ and\ false\ otherwise\r\n
comment39.params=
comment39.target=java.lang.String\ getRandomDirectionKey()
comment39.text=\r\n\ A\ method\ that\ returns\ a\ key\ which\ rep\ direction\ the\ enemy\ wants\ to\ move\ towards\ to\r\n\ @param\ String\ \ \ \ Returns\ a\ string\ of\ the\ direction\ the\ caller\ wants\ to\ move\ into\ (WASD)\r\n
comment4.params=level
comment4.target=void\ setLevel(int)
comment40.params=
comment40.target=MoveablePokemon\ getClosestPlayer()
comment40.text=\r\n\ A\ method\ that\ gets\ the\ closest\ pokemon\r\n\ @return\ MoveablePokemon\ \ \ \ \ \ Returns\ the\ closest\ pokemon\ that\ is\ a\ player\r\n
comment41.params=hitRange\ attacker\ victim
comment41.target=boolean\ checkValidHit(int,\ MoveablePokemon,\ MoveablePokemon)
comment41.text=\r\n\ Method\ which\ checks\ if\ the\ attack\ selected\ can\ reach\ the\ enemy\r\n\ @param\ hitRange\ \ \ \ \ \ An\ int\ which\ rep\ the\ tile\ length\ of\ the\ attack\r\n\ @param\ attacker\ \ \ \ \ \ Rep\ the\ attacker\ \r\n\ @param\ victim\ \ \ \ \ \ \ \ Rep\ the\ victim\r\n\ @retun\ boolean\ \ \ \ \ \ \ True\ if\ the\ attack\ can\ reach\ and\ false\ if\ not\r\n
comment42.params=
comment42.target=void\ setAttackingFalse()
comment42.text=\r\n\ A\ method\ which\ sets\ the\ boolean\ switch\ to\ attack\ to\ false\r\n
comment43.params=
comment43.target=java.lang.String\ getVAttack()
comment43.text=\r\n\ A\ method\ which\ returns\ the\ String\ of\ the\ v\ attack\r\n\ @return\ String\ \ \ \ \ \ \ Returns\ the\ string\ of\ attack\ "v"\r\n
comment44.params=
comment44.target=java.lang.String\ getCAttack()
comment44.text=\r\n\ A\ method\ which\ returns\ the\ String\ of\ the\ c\ attack\r\n\ @return\ String\ \ \ \ \ \ \ Returns\ the\ string\ of\ attack\ "c"\r\n
comment45.params=a
comment45.target=int\ getAttackRange(java.lang.String)
comment45.text=\r\n\ A\ method\ which\ returns\ the\ attack\ range\ of\ the\ given\ attack\r\n\ @param\ a\ \ \ \ \ Rep\ the\ type\ of\ attack\ (c,v)\r\n\ @return\ int\ \ Returns\ the\ hit\ range\r\n
comment46.params=
comment46.target=int\ getDef()
comment46.text=\r\n\ A\ method\ which\ returns\ the\ stat\ defence\ stat\r\n\ @return\ int\ \ \ \ \ \ Returns\ the\ defence\r\n
comment47.params=
comment47.target=int\ getAtk()
comment47.text=\r\n\ A\ method\ which\ returns\ the\ stat\ attack\ stat\r\n\ @return\ int\ \ \ \ \ \ Returns\ the\ attack\ stat\r\n
comment48.params=
comment48.target=int\ getSpeed()
comment48.text=\r\n\ A\ method\ which\ returns\ the\ stat\r\n\ @return\ int\ \ \ \ \ \ Returns\ the\ speed\ stat\r\n
comment49.params=
comment49.target=int\ getHp()
comment49.text=\r\n\ A\ method\ which\ returns\ the\ stat\r\n\ @return\ int\ \ \ \ \ \ Returns\ the\ hp\ stat\r\n
comment5.params=
comment5.target=greenfoot.GreenfootImage\ getAnimationImage()
comment5.text=\r\n\ A\ method\ which\ returns\ the\ enlarged\ image\ version\ of\ the\ pokemon\r\n\ @return\ GreenfootImage\ \ \ \ \ \ \ returns\ the\ enlarged\ version\ of\ the\ pokemon\ as\ an\ image\ \r\n
comment50.params=
comment50.target=int\ getVPower()
comment50.text=\r\n\ A\ method\ which\ returns\ the\ attack\ power\ of\ v\r\n\ @return\ int\ \ \ \ \ \ Returns\ the\ attack\ power\ \ \ \ \r\n
comment51.params=
comment51.target=int\ getCPower()
comment51.text=\r\n\ A\ method\ which\ returns\ the\ attack\ power\ of\ c\r\n\ @return\ int\ \ \ \ \ \ Returns\ the\ attack\ power\ \ \ \ \r\n
comment52.params=
comment52.target=int\ getLvl()
comment52.text=\r\n\ A\ method\ which\ returns\ the\ caller's\ level\r\n\ @return\ int\ \ \ \ \ \ Returns\ the\ level\ of\ the\ attack\r\n
comment53.params=newHp
comment53.target=void\ setHp(int)
comment53.text=\r\n\ A\ method\ which\ sets\ the\ caller's\ hp\r\n\ @param\ newHp\ \ \ \ \ Rep\ the\ newHp\ that\ is\ being\ set\r\n
comment54.params=xp
comment54.target=void\ gainXp(int)
comment54.text=\r\n\ A\ method\ which\ increases\ the\ caller's\ xp\r\n\ @param\ xp\ \ \ \ \ \ \ \ Rep\ the\ xp\ othat\ is\ being\ gained\r\n
comment55.params=
comment55.target=void\ setWait()
comment55.text=\r\n\ A\ method\ which\ sets\ the\ boolean\ switch\ waiting\ to\ true\r\n
comment56.params=
comment56.target=void\ unSetWait()
comment56.text=\r\n\ A\ method\ which\ sets\ the\ boolean\ switch\ waiting\ to\ false\r\n
comment57.params=
comment57.target=boolean\ getAlreadyAttacked()
comment57.text=\r\n\ A\ method\ which\ returns\ if\ the\ caller\ has\ already\ attacled\r\n\ @return\ boolean\ \ \ \ \ \ Returns\ true\ if\ already\ attacked\ and\ false\ otherwise\r\n
comment58.params=
comment58.target=void\ setAlreadyAttackedTrue()
comment58.text=\r\n\ A\ method\ that\ updates\ the\ caller\ has\ attacked\r\n
comment6.params=x\ y
comment6.target=void\ spawnStatBar(int,\ int)
comment6.text=\r\n\ A\ method\ which\ spawns\ a\ stat\ bar\ of\ xp\ and\ health\r\n\ @param\ x\ \ \ \ \ Represents\ the\ x\ coordinate\ of\ the\ statBar\r\n\ @param\ y\ \ \ \ \ Represents\ the\ y\ coordinatre\ of\ the\ statBar\r\n
comment7.params=
comment7.target=void\ updateStatBar()
comment7.text=\r\n\ A\ method\ which\ updates\ the\ healthBar\ when\ called\r\n
comment8.params=
comment8.target=void\ updateStatExpBar()
comment8.text=\r\n\ A\ method\ that\ updates\ the\ xpBar\ when\ called\r\n
comment9.params=
comment9.target=void\ updateStates()
comment9.text=\r\n\ A\ method\ which\ updates\ the\ pokemon's\ stats\ when\ called\ based\ off\ lvl\ changes\r\n
numComments=59
